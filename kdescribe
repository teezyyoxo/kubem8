#!/bin/bash

# === kdescribe ===
# Describe a Kubernetes pod or deployment by partial match
# Usage: kdescribe <search-term> [-n namespace] [-t type]
# Defaults: namespace="default", type="pod"

# === DEFAULTS ===
NAMESPACE="default"
SEARCH=""

# === COLORS ===
BOLD='\033[1m'
RED='\033[0;31m'
GREEN='\033[0;32m'
RESET='\033[0m'

# === ARGUMENT PARSING ===
while [[ $# -gt 0 ]]; do
    case "$1" in
        -n|--namespace)
            shift
            NAMESPACE="$1"
            ;;
        *)
            SEARCH="$1"
            ;;
    esac
    shift
done

if [ -z "$SEARCH" ]; then
    read -p "Enter search string for pod or deployment: " SEARCH
fi

# Get matching pods and deployments
PODS_OUTPUT=$(kubectl get pods -n "$NAMESPACE" --no-headers | grep "$SEARCH")
DEPLOYMENTS_OUTPUT=$(kubectl get deployments -n "$NAMESPACE" --no-headers | grep "$SEARCH")

# Combine results with a prefix to identify resource type
MATCHES=()
MATCH_TYPES=()
MATCH_LINES=()

while IFS= read -r line; do
    MATCH_LINES+=("$line")
    MATCHES+=("$(echo $line | awk '{print $1}')")
    MATCH_TYPES+=("pod")
done <<< "$PODS_OUTPUT"

while IFS= read -r line; do
    MATCH_LINES+=("$line")
    MATCHES+=("$(echo $line | awk '{print $1}')")
    MATCH_TYPES+=("deployment")
done <<< "$DEPLOYMENTS_OUTPUT"

COUNT=${#MATCHES[@]}

select_resource() {
    echo "Multiple matches found:"
    printf " %2s  %-50s  %-10s  %-8s  %-15s  %-8s  %-8s\n" "#" "NAME" "TYPE" "READY" "STATUS" "RESTARTS" "AGE"
    echo "--------------------------------------------------------------------------------------------------------------------"
    for i in "${!MATCHES[@]}"; do
        NAME="${MATCHES[$i]}"
        TYPE="${MATCH_TYPES[$i]}"
        LINE="${MATCH_LINES[$i]}"

        if [ "$TYPE" == "pod" ]; then
            # Pods have these columns in the output:
            # NAME READY STATUS RESTARTS AGE ...
            FIELDS=($LINE)
            READY="${FIELDS[1]}"
            STATUS="${FIELDS[2]}"
            RESTARTS="${FIELDS[3]}"
            AGE="${FIELDS[4]}"
        else
            # Deployments don't have READY/STATUS/RESTARTS but have AVAILABLE etc.
            # We'll fill some fields accordingly or with N/A
            FIELDS=($LINE)
            READY="N/A"
            STATUS="N/A"
            RESTARTS="N/A"
            AGE="${FIELDS[4]}"
        fi

        printf " %2d) %-50s  %-10s  %-8s  %-15s  %-8s  %-8s\n" $((i+1)) "$NAME" "$TYPE" "$READY" "$STATUS" "$RESTARTS" "$AGE"
    done

    echo
    read -p "Select a number to describe: " SEL
    SEL_INDEX=$((SEL-1))
    if [[ $SEL_INDEX -ge 0 && $SEL_INDEX -lt $COUNT ]]; then
        RESOURCE_NAME="${MATCHES[$SEL_INDEX]}"
        RESOURCE_TYPE="${MATCH_TYPES[$SEL_INDEX]}"
    else
        echo "Invalid selection."
        exit 1
    fi
}

if [ "$COUNT" -eq 0 ]; then
    echo "No pods or deployments found in namespace '${NAMESPACE}' matching '$SEARCH'"
    exit 1
elif [ "$COUNT" -eq 1 ]; then
    RESOURCE_NAME="${MATCHES[0]}"
    RESOURCE_TYPE="${MATCH_TYPES[0]}"
else
    select_resource
fi

echo -e "${BOLD}Describing $RESOURCE_TYPE '${RESOURCE_NAME}' in namespace '${NAMESPACE}':${RESET}"
kubectl describe "$RESOURCE_TYPE" "$RESOURCE_NAME" -n "$NAMESPACE"