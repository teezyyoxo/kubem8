#!/bin/bash
# kscale - Scale a Kubernetes deployment interactively
#
# Usage:
#   kscale [search-string] [replica-count] [-n namespace]
#
# Arguments:
#   search-string   Partial name of the deployment to match (e.g., "web")
#   replica-count   Number of desired replicas (e.g., 0, 1, 3)
#
# Options:
#   -n, --namespace NAMESPACE   Namespace to operate in (default: "default")

# === DEFAULTS ===
NAMESPACE="default"
SEARCH=""
REPLICAS=""

# === COLORS ===
BOLD='\033[1m'
RESET='\033[0m'
GREEN='\033[0;32m'
RED='\033[0;31m'

# === PARSE ARGS ===
while [[ $# -gt 0 ]]; do
    case "$1" in
        -n|--namespace)
            shift
            NAMESPACE="$1"
            ;;
        *)
            if [[ -z "$SEARCH" ]]; then
                SEARCH="$1"
            elif [[ -z "$REPLICAS" ]]; then
                REPLICAS="$1"
            fi
            ;;
    esac
    shift
done

# === VALIDATE INPUT ===
if [ -z "$SEARCH" ]; then
    read -p "Enter search string for deployment: " SEARCH
fi

if [ -z "$REPLICAS" ]; then
    read -p "Enter desired replica count: " REPLICAS
fi

if ! [[ "$REPLICAS" =~ ^[0-9]+$ ]]; then
    echo -e "${RED}Error:${RESET} Replica count must be a non-negative integer."
    exit 1
fi

# === GET MATCHES ===
MAPFILE -t MATCHES < <(kubectl get deploy -n "$NAMESPACE" --no-headers | awk '{print $1}' | grep "$SEARCH")
COUNT=${#MATCHES[@]}

if [ "$COUNT" -eq 0 ]; then
    echo -e "${RED}No deployments found in namespace '${NAMESPACE}' matching '${SEARCH}'${RESET}"
    exit 1
elif [ "$COUNT" -eq 1 ]; then
    DEPLOYMENT="${MATCHES[0]}"
else
    echo -e "${BOLD}Multiple matches found:${RESET}"
    for i in "${!MATCHES[@]}"; do
        printf " %2d) %s\n" $((i+1)) "${MATCHES[$i]}"
    done
    read -p "Select a deployment number: " SEL
    SEL_INDEX=$((SEL-1))
    if [[ $SEL_INDEX -ge 0 && $SEL_INDEX -lt $COUNT ]]; then
        DEPLOYMENT="${MATCHES[$SEL_INDEX]}"
    else
        echo "Invalid selection."
        exit 1
    fi
fi

# === SHOW METADATA ===
echo -e "\n${BOLD}Deployment Details:${RESET}"
kubectl get deploy "$DEPLOYMENT" -n "$NAMESPACE"

# === CONFIRM ===
echo -e "\n${BOLD}Namespace:${RESET} $NAMESPACE"
echo -e "${BOLD}Deployment:${RESET} $DEPLOYMENT"
echo -e "${BOLD}Scale to:${RESET} $REPLICAS replica(s)"
read -p "Are you sure? [y/N]: " CONFIRM
if [[ "$CONFIRM" =~ ^[Yy]$ ]]; then
    echo -e "Scaling ${BOLD}$DEPLOYMENT${RESET} to ${BOLD}$REPLICAS${RESET} replicas..."
    kubectl scale deploy "$DEPLOYMENT" -n "$NAMESPACE" --replicas="$REPLICAS"
else
    echo "Aborted."
    exit 0
fi