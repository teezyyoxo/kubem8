#!/bin/bash
# kdel â€” kubectl delete helper for pods or deployments

# === DEFAULTS ===
NAMESPACE="default"
RESOURCE_TYPE="pod"
SEARCH=""

# === COLORS ===
BOLD='\033[1m'
RED='\033[0;31m'
GREEN='\033[0;32m'
RESET='\033[0m'

# === ARG PARSING ===
while [[ $# -gt 0 ]]; do
    case "$1" in
        -n|--namespace)
            shift
            NAMESPACE="$1"
            ;;
        -t|--type)
            shift
            RESOURCE_TYPE="$1"
            ;;
        *)
            SEARCH="$1"
            ;;
    esac
    shift
done

# === ASK IF MISSING SEARCH TERM ===
if [ -z "$SEARCH" ]; then
    read -p "Enter search string for $RESOURCE_TYPE: " SEARCH
fi

# === GET RESOURCE LIST ===
if [[ "$RESOURCE_TYPE" == "pod" ]]; then
    MAP_OUTPUT=$(kubectl get pods -n "$NAMESPACE" --no-headers | grep "$SEARCH")
    MATCHES=($(echo "$MAP_OUTPUT" | awk '{print $1}'))
else
    MAP_OUTPUT=$(kubectl get "$RESOURCE_TYPE" -n "$NAMESPACE" --no-headers | grep "$SEARCH")
    MATCHES=($(echo "$MAP_OUTPUT" | awk '{print $1}'))
fi

COUNT=${#MATCHES[@]}

select_resource() {
    echo "Multiple matches found:"
    if [[ "$RESOURCE_TYPE" == "pod" ]]; then
        printf " %2s  %-50s  %-8s  %-15s  %-8s  %-8s\n" "#" "NAME" "READY" "STATUS" "RESTARTS" "AGE"
        echo "----------------------------------------------------------------------------------------------------------------"
        i=1
        while IFS= read -r line; do
            FIELDS=($line)
            printf " %2d) %-50s  %-8s  %-15s  %-8s  %-8s\n" "$i" "${FIELDS[0]}" "${FIELDS[1]}" "${FIELDS[2]}" "${FIELDS[3]}" "${FIELDS[4]}"
            i=$((i+1))
        done <<< "$MAP_OUTPUT"
    else
        for i in "${!MATCHES[@]}"; do
            printf " %2d) %s\n" $((i+1)) "${MATCHES[$i]}"
        done
    fi

    echo
    read -p "Select a $RESOURCE_TYPE number to delete: " SEL
    SEL_INDEX=$((SEL-1))
    if [[ $SEL_INDEX -ge 0 && $SEL_INDEX -lt $COUNT ]]; then
        SELECTED="${MATCHES[$SEL_INDEX]}"
    else
        echo "Invalid selection."
        exit 1
    fi
}

if [ "$COUNT" -eq 0 ]; then
    echo "No $RESOURCE_TYPE found in namespace '${NAMESPACE}' matching '$SEARCH'"
    exit 1
elif [ "$COUNT" -eq 1 ]; then
    SELECTED="${MATCHES[0]}"
else
    select_resource
fi

# === CONFIRMATION PROMPT ===
echo -e "${BOLD}Namespace:${RESET} $NAMESPACE"
echo -e "${RED}Delete ${RESOURCE_TYPE}:${RESET} $SELECTED"
read -p "Are you sure? [y/N]: " CONFIRM
if [[ "$CONFIRM" =~ ^[Yy]$ ]]; then
    echo -e "Deleting ${RESOURCE_TYPE} ${BOLD}${SELECTED}${RESET}..."
    kubectl delete "$RESOURCE_TYPE" "$SELECTED" -n "$NAMESPACE"
else
    echo "Aborted."
    exit 0
fi